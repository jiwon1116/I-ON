<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StudentCert">

    <!-- INSERT -->
    <insert id="insert" parameterType="com.spring.ion.yjw.dto.StudentCertDTO"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO student_cert
        (user_id, child_name, child_birth, child_age, child_school, child_grade, file_path, status, reviewer, reject_reason)
        VALUES
        (#{userId}, #{childName}, #{childBirth}, #{childAge}, #{childSchool}, #{childGrade}, #{filePath}, #{status}, #{reviewer}, #{rejectReason})
    </insert>

    <!-- 대기 목록 -->
    <select id="findPending" resultType="com.spring.ion.yjw.dto.StudentCertDTO">
        SELECT
        sc.id,
        sc.user_id              AS userId,
        m.nickname              AS nickname,
        sc.child_name           AS childName,
        sc.child_birth          AS childBirth,
        sc.child_age            AS childAge,
        sc.child_school         AS childSchool,
        sc.child_grade          AS childGrade,
        sc.file_path            AS filePath,
        sc.status,
        sc.reviewer,
        sc.reject_reason        AS rejectReason,
        sc.created_at           AS createdAt
        FROM student_cert sc
        LEFT JOIN member m ON m.userId = sc.user_id
        WHERE sc.status = 'PENDING'
        ORDER BY sc.created_at DESC
    </select>

    <!-- 상세 -->
    <select id="findDetail" parameterType="long" resultType="com.spring.ion.yjw.dto.StudentCertDTO">
        SELECT
        sc.id,
        sc.user_id              AS userId,
        m.nickname              AS nickname,
        sc.child_name           AS childName,
        sc.child_birth          AS childBirth,
        sc.child_age            AS childAge,
        sc.child_school         AS childSchool,
        sc.child_grade          AS childGrade,
        sc.file_path            AS filePath,
        sc.status,
        sc.reviewer,
        sc.reject_reason        AS rejectReason,
        sc.created_at           AS createdAt
        FROM student_cert sc
        LEFT JOIN member m ON m.userId = sc.user_id
        WHERE sc.id = #{id}
    </select>

    <!-- 승인 -->
    <update id="approve" parameterType="map">
        UPDATE student_cert
        SET status='APPROVED', reviewer=#{reviewer}
        WHERE id=#{id} AND status='PENDING'
    </update>

    <!-- 반려 -->
    <update id="reject" parameterType="map">
        UPDATE student_cert
        SET status='REJECTED', reject_reason=#{reason}, reviewer=#{reviewer}
        WHERE id=#{id} AND status='PENDING'
    </update>

    <!-- 회원 재제출 -->
    <update id="resubmit" parameterType="com.spring.ion.yjw.dto.StudentCertDTO">
        UPDATE student_cert
        SET child_name=#{childName},
        child_birth=#{childBirth},
        child_age=#{childAge},
        child_school=#{childSchool},
        child_grade=#{childGrade},
        file_path=#{filePath},
        status='PENDING',
        reviewer=NULL,
        reject_reason=NULL
        WHERE id=#{id} AND user_id=#{userId} AND status='REJECTED'
    </update>

    <!-- 사용자별 목록 -->
    <select id="findByUser" parameterType="string" resultType="com.spring.ion.yjw.dto.StudentCertDTO">
        SELECT
        sc.id,
        sc.user_id          AS userId,
        sc.child_name       AS childName,
        sc.child_birth      AS childBirth,
        sc.child_age        AS childAge,
        sc.child_school     AS childSchool,
        sc.child_grade      AS childGrade,
        sc.file_path        AS filePath,
        sc.status,
        sc.reviewer,
        sc.reject_reason    AS rejectReason,
        sc.created_at       AS createdAt
        FROM student_cert sc
        WHERE sc.user_id = #{userId}
        ORDER BY sc.created_at DESC
    </select>

    <!-- 전체 목록 -->
    <select id="findAll" resultType="com.spring.ion.yjw.dto.StudentCertDTO">
        SELECT
        sc.id,
        sc.user_id          AS userId,
        m.nickname          AS nickname,
        sc.child_name       AS childName,
        sc.child_birth      AS childBirth,
        sc.child_age        AS childAge,
        sc.child_school     AS childSchool,
        sc.child_grade      AS childGrade,
        sc.file_path        AS filePath,
        sc.status,
        sc.reviewer,
        sc.created_at       AS createdAt,
        sc.reject_reason    AS rejectReason
        FROM student_cert sc
        LEFT JOIN member m ON m.userId = sc.user_id
        ORDER BY sc.created_at DESC
    </select>

    <!-- 상태별 목록 -->
    <select id="findAllByStatus" parameterType="string" resultType="com.spring.ion.yjw.dto.StudentCertDTO">
        SELECT
        sc.id,
        sc.user_id          AS userId,
        m.nickname          AS nickname,
        sc.child_name       AS childName,
        sc.child_birth      AS childBirth,
        sc.child_age        AS childAge,
        sc.child_school     AS childSchool,
        sc.child_grade      AS childGrade,
        sc.file_path        AS filePath,
        sc.status,
        sc.reviewer,
        sc.created_at       AS createdAt,
        sc.reject_reason    AS rejectReason
        FROM student_cert sc
        LEFT JOIN member m ON m.userId = sc.user_id
        WHERE sc.status = #{status}
        ORDER BY sc.created_at DESC
    </select>
</mapper>
